{"version":3,"file":"static/js/607.8993754b.chunk.js","mappings":"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","sources":["../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentityClient.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeExtensions.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/CognitoIdentityServiceException.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetCredentialsForIdentityCommand.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdCommand.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultCognitoIdentityHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"cognito-identity\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultCognitoIdentityHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetCredentialsForIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetId\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetOpenIdToken\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"UnlinkIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"cognito-identity\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const w = \"required\", x = \"fn\", y = \"argv\", z = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = \"stringEquals\", j = { [w]: false, \"type\": \"String\" }, k = { [w]: true, \"default\": false, \"type\": \"Boolean\" }, l = { [z]: \"Endpoint\" }, m = { [x]: c, [y]: [{ [z]: \"UseFIPS\" }, true] }, n = { [x]: c, [y]: [{ [z]: \"UseDualStack\" }, true] }, o = {}, p = { [z]: \"Region\" }, q = { [x]: h, [y]: [{ [z]: g }, \"supportsFIPS\"] }, r = { [z]: g }, s = { [x]: c, [y]: [true, { [x]: h, [y]: [r, \"supportsDualStack\"] }] }, t = [m], u = [n], v = [p];\nconst _data = { version: \"1.0\", parameters: { Region: j, UseDualStack: k, UseFIPS: k, Endpoint: j }, rules: [{ conditions: [{ [x]: b, [y]: [l] }], rules: [{ conditions: t, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: u, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: l, properties: o, headers: o }, type: e }], type: f }, { conditions: [{ [x]: b, [y]: v }], rules: [{ conditions: [{ [x]: \"aws.partition\", [y]: v, assign: g }], rules: [{ conditions: [m, n], rules: [{ conditions: [{ [x]: c, [y]: [a, q] }, s], rules: [{ conditions: [{ [x]: i, [y]: [p, \"us-east-1\"] }], endpoint: { url: \"https://cognito-identity-fips.us-east-1.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-east-2\"] }], endpoint: { url: \"https://cognito-identity-fips.us-east-2.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-west-1\"] }], endpoint: { url: \"https://cognito-identity-fips.us-west-1.amazonaws.com\", properties: o, headers: o }, type: e }, { conditions: [{ [x]: i, [y]: [p, \"us-west-2\"] }], endpoint: { url: \"https://cognito-identity-fips.us-west-2.amazonaws.com\", properties: o, headers: o }, type: e }, { endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: t, rules: [{ conditions: [{ [x]: c, [y]: [q, a] }], rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: u, rules: [{ conditions: [s], rules: [{ conditions: [{ [x]: i, [y]: [\"aws\", { [x]: h, [y]: [r, \"name\"] }] }], endpoint: { url: \"https://cognito-identity.{Region}.amazonaws.com\", properties: o, headers: o }, type: e }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\", properties: o, headers: o }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultCognitoIdentityHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2014-06-30\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultCognitoIdentityHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Cognito Identity\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultCognitoIdentityHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class CognitoIdentityClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultCognitoIdentityHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class CognitoIdentityServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CognitoIdentityServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"./CognitoIdentityServiceException\";\nexport const AmbiguousRoleResolutionType = {\n    AUTHENTICATED_ROLE: \"AuthenticatedRole\",\n    DENY: \"Deny\",\n};\nexport class InternalErrorException extends __BaseException {\n    name = \"InternalErrorException\";\n    $fault = \"server\";\n    constructor(opts) {\n        super({\n            name: \"InternalErrorException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalErrorException.prototype);\n    }\n}\nexport class InvalidParameterException extends __BaseException {\n    name = \"InvalidParameterException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterException.prototype);\n    }\n}\nexport class LimitExceededException extends __BaseException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class NotAuthorizedException extends __BaseException {\n    name = \"NotAuthorizedException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NotAuthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NotAuthorizedException.prototype);\n    }\n}\nexport class ResourceConflictException extends __BaseException {\n    name = \"ResourceConflictException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceConflictException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    name = \"TooManyRequestsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport const ErrorCode = {\n    ACCESS_DENIED: \"AccessDenied\",\n    INTERNAL_SERVER_ERROR: \"InternalServerError\",\n};\nexport class ResourceNotFoundException extends __BaseException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class ExternalServiceException extends __BaseException {\n    name = \"ExternalServiceException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExternalServiceException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExternalServiceException.prototype);\n    }\n}\nexport class InvalidIdentityPoolConfigurationException extends __BaseException {\n    name = \"InvalidIdentityPoolConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityPoolConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityPoolConfigurationException.prototype);\n    }\n}\nexport const MappingRuleMatchType = {\n    CONTAINS: \"Contains\",\n    EQUALS: \"Equals\",\n    NOT_EQUAL: \"NotEqual\",\n    STARTS_WITH: \"StartsWith\",\n};\nexport const RoleMappingType = {\n    RULES: \"Rules\",\n    TOKEN: \"Token\",\n};\nexport class DeveloperUserAlreadyRegisteredException extends __BaseException {\n    name = \"DeveloperUserAlreadyRegisteredException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"DeveloperUserAlreadyRegisteredException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DeveloperUserAlreadyRegisteredException.prototype);\n    }\n}\nexport class ConcurrentModificationException extends __BaseException {\n    name = \"ConcurrentModificationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ConcurrentModificationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);\n    }\n}\nexport const GetCredentialsForIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretKey && { SecretKey: SENSITIVE_STRING }),\n});\nexport const GetCredentialsForIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetIdInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Token && { Token: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenForDeveloperIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\nexport const GetOpenIdTokenForDeveloperIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Token && { Token: SENSITIVE_STRING }),\n});\nexport const UnlinkIdentityInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Logins && { Logins: SENSITIVE_STRING }),\n});\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException, } from \"../models/models_0\";\nexport const se_CreateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCredentialsForIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetCredentialsForIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetId\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdToken\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdTokenForDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentityPoolsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentityPools\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsForResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsForResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_LookupDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"LookupDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_MergeDeveloperIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"MergeDeveloperIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_CreateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_DescribeIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_IdentityDescription(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DescribeIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCredentialsForIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCredentialsForIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentityPoolsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_LookupDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_MergeDeveloperIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_SetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_SetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UnlinkDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UnlinkIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UpdateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await de_InternalErrorExceptionRes(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await de_NotAuthorizedExceptionRes(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await de_ResourceConflictExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await de_ExternalServiceExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityPoolConfigurationException\":\n        case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n            throw await de_InvalidIdentityPoolConfigurationExceptionRes(parsedOutput, context);\n        case \"DeveloperUserAlreadyRegisteredException\":\n        case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n            throw await de_DeveloperUserAlreadyRegisteredExceptionRes(parsedOutput, context);\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ConcurrentModificationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DeveloperUserAlreadyRegisteredExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DeveloperUserAlreadyRegisteredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExternalServiceExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExternalServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityPoolConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidIdentityPoolConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_NotAuthorizedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new NotAuthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_Credentials = (output, context) => {\n    return take(output, {\n        AccessKeyId: __expectString,\n        Expiration: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        SecretKey: __expectString,\n        SessionToken: __expectString,\n    });\n};\nconst de_GetCredentialsForIdentityResponse = (output, context) => {\n    return take(output, {\n        Credentials: (_) => de_Credentials(_, context),\n        IdentityId: __expectString,\n    });\n};\nconst de_IdentitiesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IdentityDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_IdentityDescription = (output, context) => {\n    return take(output, {\n        CreationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        IdentityId: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Logins: _json,\n    });\n};\nconst de_ListIdentitiesResponse = (output, context) => {\n    return take(output, {\n        Identities: (_) => de_IdentitiesList(_, context),\n        IdentityPoolId: __expectString,\n        NextToken: __expectString,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `AWSCognitoIdentityService.${operation}`,\n    };\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetCredentialsForIdentityInputFilterSensitiveLog, GetCredentialsForIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetCredentialsForIdentityCommand, se_GetCredentialsForIdentityCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetCredentialsForIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetCredentialsForIdentity\", {})\n    .n(\"CognitoIdentityClient\", \"GetCredentialsForIdentityCommand\")\n    .f(GetCredentialsForIdentityInputFilterSensitiveLog, GetCredentialsForIdentityResponseFilterSensitiveLog)\n    .ser(se_GetCredentialsForIdentityCommand)\n    .de(de_GetCredentialsForIdentityCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { GetIdInputFilterSensitiveLog } from \"../models/models_0\";\nimport { de_GetIdCommand, se_GetIdCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetIdCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetId\", {})\n    .n(\"CognitoIdentityClient\", \"GetIdCommand\")\n    .f(GetIdInputFilterSensitiveLog, void 0)\n    .ser(se_GetIdCommand)\n    .de(de_GetIdCommand)\n    .build() {\n}\n"],"names":["defaultCognitoIdentityHttpAuthSchemeParametersProvider","async","config","context","input","operation","getSmithyContext","region","normalizeProvider","Error","defaultCognitoIdentityHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","commonParams","UseFIPS","type","Endpoint","Region","UseDualStack","w","x","y","z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","ruleSet","version","parameters","rules","conditions","error","endpoint","url","properties","headers","assign","cache","EndpointCache","size","params","defaultEndpointResolver","endpointParams","arguments","length","undefined","get","resolveEndpoint","logger","customEndpointFunctions","aws","awsEndpointFunctions","getRuntimeConfig","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$maxAttempts","_config$region","_config$requestHandle","_config$retryMode","_config$sha","_config$streamCollect","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","resolveDefaultsModeConfig","defaultConfigProvider","then","loadConfigsForDefaultMode","clientSharedValues","_config$base64Decoder","_config$base64Encoder","_config$disableHostPr","_config$endpointProvi","_config$extensions","_config$httpAuthSchem","_config$httpAuthSchem2","_config$logger","_config$serviceId","_config$urlParser","_config$utf8Decoder","_config$utf8Encoder","apiVersion","base64Decoder","fromBase64","base64Encoder","toBase64","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","NoAuthSigner","NoOpLogger","serviceId","urlParser","parseUrl","utf8Decoder","fromUtf8","utf8Encoder","toUtf8","getSharedRuntimeConfig","_objectSpread","runtime","bodyLengthChecker","calculateBodyLength","credentialDefaultProvider","_","Promise","reject","defaultUserAgentProvider","createDefaultUserAgentProvider","clientVersion","packageInfo","maxAttempts","DEFAULT_MAX_ATTEMPTS","invalidProvider","requestHandler","RequestHandler","create","retryMode","DEFAULT_RETRY_MODE","sha256","Sha256","streamCollector","useDualstackEndpoint","resolve","DEFAULT_USE_DUALSTACK_ENDPOINT","useFipsEndpoint","DEFAULT_USE_FIPS_ENDPOINT","CognitoIdentityClient","__Client","constructor","_len","_ref","Array","_key","configuration","_config_0","__getRuntimeConfig","super","_defineProperty","this","initConfig","_config_1","_options$useDualstack","_options$useFipsEndpo","Object","defaultSigningName","resolveClientEndpointParameters","_config_2","resolveUserAgentConfig","_config_3","resolveRetryConfig","_config_4","resolveRegionConfig","_config_5","resolveHostHeaderConfig","_config_8","resolveRuntimeExtensions","runtimeConfig","extensionConfiguration","getAwsRegionExtensionConfiguration","getDefaultExtensionConfiguration","getHttpHandlerExtensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","forEach","extension","configure","resolveAwsRegionExtensionConfiguration","resolveDefaultRuntimeConfig","resolveHttpHandlerRuntimeConfig","_config$authSchemePre","config_0","resolveAwsSdkSigV4Config","authSchemePreference","resolveHttpAuthSchemeConfig","resolveEndpointConfig","middlewareStack","use","getUserAgentPlugin","getRetryPlugin","getContentLengthPlugin","getHostHeaderPlugin","getLoggerPlugin","getRecursionDetectionPlugin","getHttpAuthSchemeEndpointRuleSetPlugin","httpAuthSchemeParametersProvider","identityProviderConfigProvider","DefaultIdentityProviderConfig","getHttpSigningPlugin","destroy","CognitoIdentityServiceException","__ServiceException","setPrototypeOf","prototype","InternalErrorException","__BaseException","opts","$fault","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","TooManyRequestsException","ResourceNotFoundException","ExternalServiceException","InvalidIdentityPoolConfigurationException","DeveloperUserAlreadyRegisteredException","ConcurrentModificationException","GetCredentialsForIdentityInputFilterSensitiveLog","obj","Logins","SENSITIVE_STRING","CredentialsFilterSensitiveLog","SecretKey","GetCredentialsForIdentityResponseFilterSensitiveLog","Credentials","GetIdInputFilterSensitiveLog","se_GetCredentialsForIdentityCommand","sharedHeaders","body","JSON","stringify","_json","buildHttpRpcRequest","se_GetIdCommand","de_GetCredentialsForIdentityCommand","output","statusCode","de_CommandError","data","parseBody","contents","de_GetCredentialsForIdentityResponse","$metadata","deserializeMetadata","de_GetIdCommand","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","de_InternalErrorExceptionRes","de_InvalidParameterExceptionRes","de_LimitExceededExceptionRes","de_NotAuthorizedExceptionRes","de_ResourceConflictExceptionRes","de_TooManyRequestsExceptionRes","de_ResourceNotFoundExceptionRes","de_ExternalServiceExceptionRes","de_InvalidIdentityPoolConfigurationExceptionRes","de_DeveloperUserAlreadyRegisteredExceptionRes","de_ConcurrentModificationExceptionRes","parsedBody","throwDefaultError","deserialized","exception","__decorateServiceException","take","de_Credentials","AccessKeyId","__expectString","Expiration","__expectNonNull","__parseEpochTimestamp","__expectNumber","SessionToken","IdentityId","_output$headers$xAmz","httpStatusCode","requestId","extendedRequestId","cfId","withBaseException","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","__HttpRequest","concat","GetCredentialsForIdentityCommand","$Command","classBuilder","ep","Command","cs","getSerdePlugin","serialize","deserialize","getEndpointPlugin","getEndpointParameterInstructions","ser","de","build","GetIdCommand"],"sourceRoot":""}